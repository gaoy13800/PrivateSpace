


首先说安装

	java目录配置   JAVA_HOME java目录

					cmd 输入java确认安装成功


	maven 安装 3.5版本

					环境变量配置  M2_HOME maven的安装目录

					cmd 输入 mvn -version 显示版本 安装成功


	重要一点 maven的setting.xml 更改其包下载源为aliyun 			
	更改仓库位置


	<localRepository>D:/.m2/repos</localRepository>  

	 <mirror>
		<id>nexus-aliyun</id>
		<mirrorOf>*</mirrorOf>
		<name>Nexus aliyun</name>
		<url>http://maven.aliyun.com/nexus/content/groups/public</url>
	 </mirror>	


	 复制一份setting文件到 C:\Users\Gaoy\.m2   不然idea在生成新的spring boot项目时会应用不上aliyun的配置下载报错


	 还要去更改idea的maven配置为本地的maven，它默认是用的自带的maven




	 code 注意项



	 resource 目录下的 application.re*改为 application.yml

	 Spring Boot 踩坑之路之 Configuration Annotation Proessor not found in classpath

	 出现spring boot Configuration Annotation Proessor not found in classpath的提示是在用了@ConfigurationProperties这个注解时，所以问题出现在ConfigurationProperties注解。
		根据提示的not found in classpath,查询此注解的使用关于怎么指定classpath,进而查询location，spring boot1.5以上版本@ConfigurationProperties取消location注解


	官方解决方案，Maven引入依赖


	<dependency>
   		<groupId> org.springframework.boot </groupId>
   		<artifactId> spring-boot-configuration-processor </artifactId>
   		<optional> true </optional>
		</dependency>


	spring-boot 项目创建方式  https://start.spring.io/ 生成demobingdaoru
				或者使用idea创建

	项目结构				

		包含： pom.xml  maven构建说明文件
			  package下面有一个 xxxApplication.java 一个带有main方法的类，用于启动应用程序
			  上面对应的还有一个单元测试类  xxxApplicationTests.java: 一个空的Junit测试类，它加载了一个使用spring boot字典配置功能的spring应用程序上下文。
			  application.properties 一个空的properties文件，你可以根据需要添加配置属性。

	现在解析 pom.xml
	
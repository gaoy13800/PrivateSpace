PHP-高并发和大流量的解决方案


一  高并发的概念

在互联网时代，并发，高并发通常是指并发访问。也就是在某个时间点，有多少个访问同时到来。

二 高并发架构相关概念

1、 QPS （每秒查询率）：每秒钟请求或查询的数量，在互联网领域，指的是每秒响应请求数（指HTTP请求）
2、 PV（page view） ：综合浏览量，即页面浏览量或者点击量，一个访客在24小时内访问的页面数量。注：同一个人浏览你的网站的同一页面，只记一次pv
3、 吞吐量：单位时间内处理的请求数量（通常有QPS和并发数决定）
4、 响应时间： 从请求发出到收到响应花费的时间
5、 独立访客（UV）： 一定时间范围内，相同访客多次访问网站，只计算一个独立访客
6、 带宽： 计算带宽需关注两个指标，峰值和页面的平均大小
7、 日网站带宽：PV/统计时间（换算到秒） * 平均页面大小(kb) * 8

三 注意

1、 QPS不等于并发连接数（QPS是每秒HTTP请求数量，并发连接数是系统同时处理的请求数量）
2、 峰值每秒请求数（QPS）= （总PV数*80%）/ （六小时秒数*20%）【代表80%的访问量都集中在20%的时间内】
3、 压力测试： 测试能承受的最大并发数 以及测试最大承受的QPS值
4、 常用的性能测试工具【ab, wrk, httpload, web Bench, Siege, Apache Jmeter】


四 优化

1、 当QPS小于50时
	优化方案： 为一般小型网站，不用考虑优化
2、 当QPS达到100时， 遇到数据查询瓶颈
	优化方案： 数据缓存层，数据库的负载均衡‘
3、 当QPS达到800时，遇到带宽瓶颈
	优化方案： CDN加速，负载均衡

4、 当QPS达到1000时
	优化方案： 做HTML静态缓存		
5、 当QPS达到2000时
	优化方案： 做业务分离，分布式存储	

五 高并发解决方案案例

1、 流量优化
	防盗链处理(去除恶意请求，防止图片、视频被盗用)	
		利用HTTP Referer字段（检测是否别的网站发送的请求）
		利用登录验证信息
		使用cookie中的动态验证信息
		使用POST请求 (增加防盗链的难度)
		使用图片验证码 (常用技术)
		使用动态秘钥
		在内容中插入数据(可以在内容中加入哈希校验，在url中加入动态hash值)

2、 前端优化

	1、 减少HTTP请求
	2、 添加异步请求（先不将所有数据都展示给用户，用户触发某个事件，才会异步请求数据）
	3、 启用浏览器缓存和文件压缩
	4、 CDN加速
	5、 建立独立的图片服务器（减少io）

3、 服务端优化
	1、 页面静态化
	2、 并发处理
	3、 队列处理

4、 数据库优化
	1、 数据库缓存
	2、 分库分表，分区
	3、 读写分离
	4、 负载均衡

5、 web服务器优化
 nginx反向代理实现负载均衡	
 lvs 实现负载均衡

